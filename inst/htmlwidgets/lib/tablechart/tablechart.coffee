root = exports ? this
# Helper function ////////////////////////////////////

createAccessors = (visExport) ->
  for n of visExport.opts
    if !visExport.opts.hasOwnProperty(n)
      continue
    visExport[n] = do (n) ->
      (v) ->
        if arguments.length then visExport.opts[n] = v
        this
 else visExport.opts[n]
  return

chain (object, payload) ->
  Object.keys(p).reduce (p, k) -> p[k](payload[k]),
  obj

# ---
# generated by js2coffee 2.0.1

root.tablechart = ->
  exports = (selection) ->
    selection.each (data) ->
      h = Object.keys(data.measures[0])
      x = h.map (y) ->
        m_ = d3.max(data.measures, (d) -> d[y])
        data.measures.map (d) -> d[y]/m_
      headers = d3.merge([["Model"], h])
      viz = d3.select(this)

      panel = viz.append("div")
        .attr("class", "panel panel-default")
      panel.append("div")
          .attr("class", "panel-heading")
        .append("h4")
          .text(data.heading)

      table2 = panel.append("div")
           .attr("class", "table-responsive")
         .append("table")
           .attr("class", "table table-hover tablechart")

      panel.append("div")
          .attr("class", "panel-footer")
        .append("small")
          .text(data.footnote)

      thead = table2.append("thead")
      tbody = table2.append("tbody")

      question = ''

      thead.append("tr")
        .selectAll("th")
        .data(headers).enter()
        .append("th")
          .html (d, i) ->
             if i > 0
               "<span class='header'>" + d + "</span> " + question
             else
               d

      tr = tbody.selectAll("tr")
        .data(d3.transpose(x)).enter()
        .append("tr")


      tr.append("th")
        .attr("scope", "row")
        .text((d, i) -> data.models[i] || "Model " + i)
        .style("color", "darkgray")


      td = tr.selectAll("td")
        .data(Object).enter()
        .append("td")

      barwidth = parseFloat(td.style("width"))

      svg = td.append("svg")
        #.attr("width", barwidth)
        .attr("width", "100%")
        .attr("height", 20)

      bars = svg.append("rect")
        .attr("height", 20)
        .attr("width", (d, i) -> d*95 + "%")
        .attr("fill", "steelblue")

      tip = d3.tip()
        .attr("class", "d3-tip")
        .direction("e")
        .html (d, i) ->
           key = headers[i + 1]
           m_ = d3.max data.measures, (d) -> d[key]
           (d*m_).toFixed(2)

      bars.call(tip)

      bars.on("mouseover", tip.show)
      bars.on("mouseout", tip.hide)


      table2.selectAll("thead th .header")
        .on "click", (d, i) ->
           d3.selectAll(".header").classed("sorted", false)
           d3.select(this).classed("sorted", true)
           asc = d3.select(this).classed("asc")
           d3.select(this).classed("asc", !asc)
           tr.sort (a, b) ->
              if asc
                b[i] - a[i]
              else
                a[i] - b[i]
